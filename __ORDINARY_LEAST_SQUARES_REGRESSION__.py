import numpy as np

# ORDINARY_LEAST_SQUARES_REGRESSION: IMPLEMENTATION OF ORDINARY LEAST SQUARES REGRESSION. ORDINARY LEAST SQUARES (OLS) REGRESSION IS A METHOD FOR ESTIMATING THE UNKNOWN PARAMETERS IN A LINEAR REGRESSION MODEL. OLS REGRESSION FINDS THE PARAMETER VALUES THAT MINIMIZE THE SUM OF THE SQUARED DIFFERENCES BETWEEN THE OBSERVED AND PREDICTED VALUES.
class ORDINARY_LEAST_SQUARES_REGRESSION:
    # INITIALIZES THE ORDINARY LEAST SQUARES REGRESSION MODEL.
    def __init__(self):
        # WEIGHTS: IT'S THE PARAMETER THAT CORRESPONDS TO THE WEIGHTS OF THE ORDINARY LEAST SQUARES REGRESSION MODEL.
        self.WEIGHTS = None

    # FIT(): IT'S THE FUNCTION THAT TRAINS THE ORDINARY LEAST SQUARES REGRESSION MODEL.
    def FIT(self, X, Y):
        # X: IT'S THE INPUT VALUES.
        X = np.array(X)
        # Y: IT'S THE OUTPUT VALUES.
        Y = np.array(Y)
        # N: IT'S THE NUMBER OF DATA POINTS.
        N = len(X)
        # X: IT'S THE INPUT VALUES.
        X = np.c_[np.ones(N), X]
        # W: IT'S THE PARAMETER THAT CORRESPONDS TO THE WEIGHTS OF THE ORDINARY LEAST SQUARES REGRESSION MODEL.
        W = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(Y)
        # WEIGHTS: IT'S THE PARAMETER THAT CORRESPONDS TO THE WEIGHTS OF THE ORDINARY LEAST SQUARES REGRESSION MODEL.
        self.WEIGHTS = W

    # TRANSFORM(): IT'S THE FUNCTION THAT USES THE ORDINARY LEAST SQUARES REGRESSION MODEL IN ORDER TO PREDICT NEW OUTPUT VALUES.
    def TRANSFORM(self, X):
        # X: IT'S THE INPUT VALUES.
        X = np.array(X)
        # N: IT'S THE NUMBER OF DATA POINTS.
        N = len(X)
        # X: IT'S THE INPUT VALUES.
        X = np.c_[np.ones(N), X]
        # RETURN THE PREDICTED OUTPUT VALUE.
        return X.dot(self.WEIGHTS)