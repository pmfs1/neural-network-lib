name: 'PUBLISH'
on:
  push:
    branches:
      - develop
    paths-ignore:
      - '.github/**/*.yml'
      - '.gitignore'
  workflow_dispatch:
jobs:
  TAG:
    name: 'TAG'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      VERSION: ${{ steps.GET_VERSION.outputs.VERSION }}
    steps:
    - name: 'CHECKOUT'
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: 'GET PREVIOUS'
      id: GET_PREVIOUS
      uses: WyriHaximus/github-action-get-previous-tag@v1
      with:
        fallback: 0.0.0.00000
    - name: 'GET VERSION'
      id: GET_VERSION
      run: |
        set +o pipefail +e
        OLD_VERSION="${{ steps.GET_PREVIOUS.outputs.tag }}"
        OLD_VERSION="${OLD_VERSION%.*}"
        echo "OLD_VERSION: $OLD_VERSION"
        if [[ $OLD_VERSION =~ ^[0-9] ]]; then NEW_VERSION=${OLD_VERSION%.*}.$((${OLD_VERSION##*.}+1)); else NEW_VERSION=0.0.1; fi
        echo "NEW_VERSION: $NEW_VERSION"
        echo "VERSION=$NEW_VERSION" >> "$GITHUB_OUTPUT"
        set -o pipefail -e
    - name: 'TAG'
      uses: laputansoft/github-tag-action@v4.6
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.GET_VERSION.outputs.VERSION }}
        release_branches: 'develop'
  PUBLISH:
    name: 'PUBLISH'
    runs-on: ubuntu-latest
    needs: [ TAG ]
    permissions:
      contents: read
      packages: write
    steps:
    - name: 'CHECKOUT'
      uses: actions/checkout@v3
    - name: 'AUTHENTICATE'
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
    - name: 'PUBLISH'
      run: |
        docker build . --file Dockerfile --tag "${{ github.repository }}" --label "runnumber=${GITHUB_RUN_ID}"
        IMAGE_ID="ghcr.io/${{ github.repository }}"
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # [ "$VERSION" == "develop" ] && VERSION=latest
        VERSION=${{ needs.TAG.outputs.VERSION }}
        docker tag "${{ github.repository }}" $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
  PUBLISH_MODULES:
    name: 'PUBLISH_MODULES'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ TAG ]
    strategy:
      matrix: 
        MODULES: [ "neural_networks", "regression", "clustering", "problem_solving" ]
    steps:
      - name: 'CHECKOUT'
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            ${{ matrix.MODULES }}            
      - name: 'AUTHENTICATE'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: 'PUBLISH'
        run: |
          docker build . --file Dockerfile --tag "${{ github.repository }}/${{ matrix.MODULES }}" --label "runnumber=${GITHUB_RUN_ID}"
          IMAGE_ID="ghcr.io/${{ github.repository }}/${{ matrix.MODULES }}"
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # [ "$VERSION" == "develop" ] && VERSION=latest
          VERSION=${{ needs.TAG.outputs.VERSION }}
          docker tag "${{ github.repository }}/${{ matrix.MODULES }}" $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION