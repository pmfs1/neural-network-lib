# BERNOULLI_DISTRIBUTION [STATIC]: IMPLEMENTATION OF BERNOULLI DISTRIBUTION. THE BERNOULLI DISTRIBUTION, WHICH TAKES VALUE 1 WITH PROBABILITY P AND VALUE 0 WITH PROBABILITY Q = 1 âˆ’ P. IT IS A SPECIAL CASE OF A BINOMIAL DISTRIBUTION WHERE N = 1.
class BERNOULLI_DISTRIBUTION:
    # PROBABILITY_MASS_FUNCTION [STATIC]: PROBABILITY MASS FUNCTION OF BERNOULLI DISTRIBUTION
    @staticmethod
    def PROBABILITY_MASS_FUNCTION(X: float, P: float) -> float:
        if X == 1:  # IF X IS EQUAL TO 1
            return P  # RETURN P
        elif X == 0:  # IF X IS EQUAL TO 0
            return 1 - P  # RETURN 1 - P
        else:  # ELSE
            raise ValueError("X MUST BE EITHER 0 OR 1")  # RAISE VALUE ERROR

    # CUMULATIVE_DISTRIBUTION_FUNCTION [STATIC]: CUMULATIVE DISTRIBUTION FUNCTION OF BERNOULLI DISTRIBUTION
    @staticmethod
    def CUMULATIVE_DISTRIBUTION_FUNCTION(X: float, P: float) -> float:
        if X < 0:  # IF X IS LESS THAN 0
            return 0  # RETURN 0
        elif X >= 0 and X < 1:  # IF X IS GREATER THAN OR EQUAL TO 0 AND LESS THAN 1
            return 1 - P  # RETURN 1 - P
        elif X >= 1:  # IF X IS GREATER THAN OR EQUAL TO 1
            return 1  # RETURN 1
        else:  # ELSE
            raise ValueError("X MUST BE A REAL NUMBER")  # RAISE VALUE ERROR