import math

# BINOMIAL_DISTRIBUTION [STATIC]: IMPLEMENTATION OF BINOMIAL DISTRIBUTION. THE BINOMIAL DISTRIBUTION, WHICH DESCRIBES THE NUMBER OF SUCCESSES IN A SERIES OF INDEPENDENT YES/NO EXPERIMENTS ALL WITH THE SAME PROBABILITY OF SUCCESS.
class BINOMIAL_DISTRIBUTION:
    # PROBABILITY_MASS_FUNCTION [STATIC]: PROBABILITY MASS FUNCTION OF BINOMIAL DISTRIBUTION
    @staticmethod
    def PROBABILITY_MASS_FUNCTION(K: int, N: int, P: float) -> float:
        assert P >= 0 and P <= 1, "P MUST BE GREATER THAN OR EQUAL TO 0 AND LESS THAN OR EQUAL TO 1"  # ASSERT P IS GREATER THAN OR EQUAL TO 0 AND LESS THAN OR EQUAL TO 1
        assert N >= 0, "N MUST BE GREATER THAN OR EQUAL TO 0"  # ASSERT N IS GREATER THAN OR EQUAL TO 0
        if K >= 0 and K <= N:  # IF K IS GREATER THAN OR EQUAL TO 0 AND LESS THAN OR EQUAL TO N
            return (math.factorial(N) / (math.factorial(K) * math.factorial(N - K))) * (P ** K) * ((1 - P) ** (N - K))  # RETURN (N CHOOSE K) * P ** K * (1 - P) ** (N - K)
        else:  # ELSE K IS NOT GREATER THAN OR EQUAL TO 0 AND LESS THAN OR EQUAL TO N (K IS NOT A VALID VALUE)
            raise ValueError("K MUST BE GREATER THAN OR EQUAL TO 0 AND LESS THAN OR EQUAL TO N")  # RAISE VALUE ERROR

    # CUMULATIVE_DISTRIBUTION_FUNCTION [STATIC]: CUMULATIVE DISTRIBUTION FUNCTION OF BINOMIAL DISTRIBUTION
    @staticmethod
    def CUMULATIVE_DISTRIBUTION_FUNCTION(K: int, N: int, P: float) -> float:
        assert P >= 0 and P <= 1, "P MUST BE GREATER THAN OR EQUAL TO 0 AND LESS THAN OR EQUAL TO 1"  # ASSERT P IS GREATER THAN OR EQUAL TO 0 AND LESS THAN OR EQUAL TO 1
        assert N >= 0, "N MUST BE GREATER THAN OR EQUAL TO 0"  # ASSERT N IS GREATER THAN OR EQUAL TO 0
        if K >= 0 and K <= N:  # IF K IS GREATER THAN OR EQUAL TO 0 AND LESS THAN OR EQUAL TO N
            return sum([(math.factorial(N) / (math.factorial(i) * math.factorial(N - i))) * (P**i) * ((1 - P)**(N - i)) for i in range(math.floor(K))])  # RETURN SUM OF PROBABILITY MASS FUNCTION FROM 0 TO K
        else:  # ELSE K IS NOT GREATER THAN OR EQUAL TO 0 AND LESS THAN OR EQUAL TO N (K IS NOT A VALID VALUE)
            raise ValueError("K MUST BE GREATER THAN OR EQUAL TO 0 AND LESS THAN OR EQUAL TO N")  # RAISE VALUE ERROR